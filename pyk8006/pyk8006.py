#/usr/bin/env python
# -*- coding: utf-8 -*-
import spidev
import time

from k8006 import *

speed = 50000

def int_to_chr(int):
    return chr(int).decode('latin-1')

def rawsend(data):
    resp = spi.xfer(data, speed, 50000)
    print "> " + str([hex(i) for i in data])
    print "> " + str(''.join([int_to_chr(i) for i in data]))
    print "< " + str([hex(i) for i in resp])
    print "> " + str([int_to_chr(i) for i in resp])

    #read = spi.readbytes(20)
    #print [hex(i) for i in read]

def send(payload):
    header = [0x23, 0x00, 0x00]
    lenght = len(payload) + len(header)
    header[1] = 0x30 + (lenght / 10)
    header[2] = 0x30 + (lenght % 10)
    rawsend(header + payload)

off    = [0x23, 0x30, 0x37, 0x4c, 0x30, 0x30, 0x30, 0x23, 0x30, 0x37, 0x4c, 0x30, 0x31, 0x31] # LEDs off    #07L000 #07L011
red    = [0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x30, 0x23, 0x30, 0x37, 0x4c, 0x30, 0x31, 0x31] # Red LED     #07L100 #07L011
green  = [0x23, 0x30, 0x37, 0x4c, 0x30, 0x30, 0x30, 0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x31] # Green LED   #07L000 #07L101
orange = [0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x30, 0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x31] # Orange LED  #07L100 #07L101

def text_to_bytearray(text):
    return bytearray(text.decode('utf-8'), 'latin-1')

def display_text(text):
    frame = [0x23, 0x00, 0x00, 0x56, 0x44]
    text_as_list = list(text_to_bytearray(text))
    count = len(text_as_list) + 5
    print count
    frame[1] = 0x30 + (count / 10)
    frame[2] = 0x30 + (count % 10)
    rawsend(frame + text_as_list)
    
frame1 = [0x23, 0x30, 0x35, 0x43, 0x56] # Followed by a reply from k8006
frame2 = [0x23, 0x30, 0x35, 0x56, 0x77] # Blank screen (no LED change)
frame3 = [0x23, 0x31, 0x30, 0x56, 0x63, 0x30, 0x39, 0x39, 0x39, 0x39] # Time ??
frame4 = [0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x30] # Orange LED
frame5 = [0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x31] # ???
frame6 = [0x23, 0x31, 0x36, 0x56, 0x44, 0x20, 0x20, 0x44, 0xe9, 0x6d, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65] # text: DÃ©marrage
frame7 = [0x23, 0x30, 0x37, 0x4c, 0x30, 0x30, 0x30] # Green LED
frame8 = [0x23, 0x30, 0x37, 0x4c, 0x31, 0x30, 0x31] # ???
frame9 = [0x23, 0x30, 0x35, 0x56, 0x44] # Blank screen (no LED change)

frame10 = [0x23, 0x31, 0x37, 0x56, 0x44, 0x45, 0x63, 0x68, 0x65, 0x63, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x78] # text: Echec connex
frame11 = [0x23, 0x30, 0x37, 0x56, 0x53, 0x52, 0x30] # REC off
frame12 = [0x23, 0x30, 0x36, 0x56, 0x45, 0x30] # REC disk off
frame13 = [0x23, 0x30, 0x37, 0x56, 0x53, 0x52, 0x31] # REC on
frame14 = [0x23, 0x30, 0x36, 0x56, 0x45, 0x37] # REC disk on

frame15 = [0x23, 0x30, 0x37, 0x56, 0x53, 0x52, 0x30] # REC off
frame16 = [0x23, 0x30, 0x36, 0x56, 0x45, 0x30] # REC disk off

data = [0x56, 0x45, 0x31] # REC disk is turning
data = [0x56, 0x45, 0x32] # REC disk is double-turning
data = [0x56, 0x45, 0x33] # REC disk is slicing
data = [0x56, 0x45, 0x34] # REC disk is blinking
data = [0x56, 0x45, 0x35] # REC disk is 4 fixed bars
data = [0x56, 0x45, 0x36] # REC disk is 4 fixed bars
data = [0x56, 0x45, 0x36] # REC disk is a clock-turning
data = [0x56, 0x45, 0x37] # REC disk is a clock-turning

data = [0x56, 0x77] # Blank screen

k8006 = K8006()

#for i in range(0x30, 0x38):
#    data = [0x56, 0x45, i]
#    k8006.send(data)
#    time.sleep(3)

#data = [0x56, 0x77] # Blank screen
#k8006.send(data)
#
#k8006.display_text("Classe Go Go Go")
#time.sleep(1)
#
#k8006.rawsend(off)
#time.sleep(1)
#k8006.rawsend(red)
#time.sleep(1)
#k8006.rawsend(green)
#time.sleep(1)
#k8006.rawsend(orange)
#time.sleep(1)

# #06VN1 -> 0x4e => ZZZ
# #06VA1 => All ON (Crash)
k8006.send([ord('V'), ord('A'), 0x31])

# VSA => Am
# VSC => Ch
# VSF => Fm
# VSR => Rec
# VSS => Stereo
# VST => Title

# VSa => Antenna
# VSc => Clock
# VSt => Track

# VC => left clock
# Vc => center clock

